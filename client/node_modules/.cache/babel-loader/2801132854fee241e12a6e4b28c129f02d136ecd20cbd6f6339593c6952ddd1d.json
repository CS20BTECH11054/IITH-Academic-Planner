{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\React_Project\\\\client\\\\src\\\\pages\\\\Timetable\\\\Timetable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Header from '../../components/Header/Header';\n//import data from \"./newdata.json\"; // assuming data is in the same directory as this file\nimport './Timetable.css';\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n//import { faCirclePlus} from \"@fortawesome/free-solid-svg-icons\"\n//import TimetableOpts from '../../components/Timetable/TimetableOpts';\nimport Select from 'react-select';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction handleClick(slotname, slottime, data1, data2) {\n  if (data1[slottime] || data2[slottime]) {\n    alert(\"There is already a course/activity present at that slot\");\n    return;\n  }\n  const handleSlotAdd = async () => {\n    try {\n      const headers = {\n        'Authorization': `${sessionStorage.getItem('token')}`\n      };\n      const res = await axios.post(`http://localhost:5000/api/user/addSlot`, {\n        \"slotname\": slotname,\n        \"slot\": slottime\n      }, {\n        headers\n      });\n      console.log(res);\n      alert(\"Added successfully\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handleSlotAdd();\n}\nfunction handleUpdate(data1, data2, setdata1, setdata2, setSlotsData) {\n  const handlegetAllSlots = async () => {\n    try {\n      const headers = {\n        'Authorization': `${sessionStorage.getItem('token')}`\n      };\n      const res = await axios.get(`http://localhost:5000/api/user/getAllSlots`, {\n        headers\n      });\n      setdata1(res.data);\n      var data = data1;\n      if (data) {\n        for (const slot in data) {\n          const subject = data[slot];\n          const Tslot = SlotsTime[slot];\n          for (let i = 0; i < Tslot.length; i++) {\n            const day = Tslot[i].day;\n            const time = Tslot[i].time;\n            setSlotsData(prevSlotsData => ({\n              ...prevSlotsData,\n              [day]: {\n                ...prevSlotsData[day],\n                [time]: subject\n              }\n            }));\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handlegetAllSlots();\n  const SlotsTime = {\n    \"A\": [{\n      day: \"Monday\",\n      time: \"9.00-9.55\"\n    }, {\n      day: \"Wednesday\",\n      time: \"11.00-11.55\"\n    }, {\n      day: \"Thursday\",\n      time: \"10.00-10.55\"\n    }],\n    \"B\": [{\n      day: \"Monday\",\n      time: \"10.00-10.55\"\n    }, {\n      day: \"Wednesday\",\n      time: \"9.00-9.55\"\n    }, {\n      day: \"Thursday\",\n      time: \"11.00-11.55\"\n    }],\n    \"C\": [{\n      day: \"Monday\",\n      time: \"11.00-11.55\"\n    }, {\n      day: \"Wednesday\",\n      time: \"10.00-10.55\"\n    }, {\n      day: \"Thursday\",\n      time: \"9.00-9.55\"\n    }],\n    \"D\": [{\n      day: \"Monday\",\n      time: \"12.00-12.55\"\n    }, {\n      day: \"Tuesday\",\n      time: \"9.00-9.55\"\n    }, {\n      day: \"Friday\",\n      time: \"11.00-11.55\"\n    }],\n    \"E\": [{\n      day: \"Tuesday\",\n      time: \"10.00-10.55\"\n    }, {\n      day: \"Friday\",\n      time: \"9.00-9.55\"\n    }, {\n      day: \"Thursday\",\n      time: \"12.00-12.55\"\n    }],\n    \"F\": [{\n      day: \"Tuesday\",\n      time: \"11.00-11.55\"\n    }, {\n      day: \"Friday\",\n      time: \"10.00-10.55\"\n    }],\n    \"G\": [{\n      day: \"Tuesday\",\n      time: \"12.00-12.55\"\n    }, {\n      day: \"Wednesday\",\n      time: \"12.00-12.55\"\n    }, {\n      day: \"Friday\",\n      time: \"12.00-12.55\"\n    }],\n    \"P\": [{\n      day: \"Monday\",\n      time: \"14.30-15.55\"\n    }, {\n      day: \"Thursday\",\n      time: \"16.00-17.25\"\n    }],\n    \"Q\": [{\n      day: \"Monday\",\n      time: \"16.00-17.25\"\n    }, {\n      day: \"Thursday\",\n      time: \"14.30-15.55\"\n    }],\n    \"R\": [{\n      day: \"Tuesday\",\n      time: \"14.30-15.55\"\n    }, {\n      day: \"Friday\",\n      time: \"16.00-17.25\"\n    }],\n    \"S\": [{\n      day: \"Tuesday\",\n      time: \"16.00-17.25\"\n    }, {\n      day: \"Friday\",\n      time: \"14.30-15.55\"\n    }],\n    \"W\": [{\n      day: \"Monday\",\n      time: \"18.00-19.25\"\n    }, {\n      day: \"Thursday\",\n      time: \"18.00-19.25\"\n    }],\n    \"X\": [{\n      day: \"Monday\",\n      time: \"19.30-21.00\"\n    }, {\n      day: \"Thursday\",\n      time: \"19.30-21.00\"\n    }],\n    \"Y\": [{\n      day: \"Tuesday\",\n      time: \"18.00-19.25\"\n    }, {\n      day: \"Friday\",\n      time: \"18.00-19.25\"\n    }],\n    \"Z\": [{\n      day: \"Tuesday\",\n      time: \"19.30-21.00\"\n    }, {\n      day: \"Friday\",\n      time: \"19.30-21.00\"\n    }]\n  };\n  const handlegetAllCourseSlots = async () => {\n    try {\n      const headers = {\n        'Authorization': `${sessionStorage.getItem('token')}`\n      };\n      const res = await axios.get(`http://localhost:5000/api/user/getAllCourses`, {\n        headers\n      });\n      setdata2(res.data);\n      var data = data2;\n      if (data) {\n        for (const slot in data) {\n          const subject = data[slot];\n          const Tslot = SlotsTime[slot];\n          for (let i = 0; i < Tslot.length; i++) {\n            const day = Tslot[i].day;\n            const time = Tslot[i].time;\n            setSlotsData(prevSlotsData => ({\n              ...prevSlotsData,\n              [day]: {\n                ...prevSlotsData[day],\n                [time]: subject\n              }\n            }));\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  handlegetAllCourseSlots();\n}\nexport default function Timetable() {\n  _s();\n  const [slotname, setslotname] = useState(\"\");\n  const [slottime, setslottime] = useState(\"\");\n  const [data1, setdata1] = useState(null);\n  const [data2, setdata2] = useState(null);\n  const timeSlots = [\"00.00-8.55\", \"9.00-9.55\", \"10.00-10.55\", \"11.00-11.55\", \"12.00-12.55\", \"12.55-14.30\", \"14.30-15.55\", \"16.00-17.25\", \"17.30-17.55\", \"18.00-19.25\", \"19.30-21.00\", \"21.05-23.59\"];\n  const [slotsData, setSlotsData] = useState({\n    Monday: {\n      \"00.00-8.55\": \"Asish\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    },\n    Tuesday: {\n      \"00.00-8.55\": \"\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    },\n    Wednesday: {\n      \"00.00-8.55\": \"\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    },\n    Thursday: {\n      \"00.00-8.55\": \"\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    },\n    Friday: {\n      \"00.00-8.55\": \"\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    },\n    Saturday: {\n      \"00.00-8.55\": \"\",\n      \"9.00-9.55\": \"\",\n      \"10.00-10.55\": \"\",\n      \"11.00-11.55\": \"\",\n      \"12.00-12.55\": \"\",\n      \"12.55-14.30\": \"Lunch\",\n      \"14.30-15.55\": \"\",\n      \"16.00-17.25\": \"\",\n      \"17.30-17.55\": \"Snacks\",\n      \"18.00-19.25\": \"\",\n      \"19.30-21.00\": \"\",\n      \"21.05-23.59\": \"\"\n    }\n  });\n  const slotOptions = [{\n    \"name\": \"A\",\n    \"label\": \"A\"\n  }, {\n    \"name\": \"B\",\n    \"label\": \"B\"\n  }, {\n    \"name\": \"C\",\n    \"label\": \"C\"\n  }, {\n    \"name\": \"D\",\n    \"label\": \"D\"\n  }, {\n    \"name\": \"E\",\n    \"label\": \"E\"\n  }, {\n    \"name\": \"F\",\n    \"label\": \"F\"\n  }, {\n    \"name\": \"G\",\n    \"label\": \"G\"\n  }, {\n    \"name\": \"P\",\n    \"label\": \"P\"\n  }, {\n    \"name\": \"Q\",\n    \"label\": \"Q\"\n  }, {\n    \"name\": \"R\",\n    \"label\": \"R\"\n  }, {\n    \"name\": \"S\",\n    \"label\": \"S\"\n  }, {\n    \"name\": \"W\",\n    \"label\": \"W\"\n  }, {\n    \"name\": \"X\",\n    \"label\": \"X\"\n  }, {\n    \"name\": \"Y\",\n    \"label\": \"Y\"\n  }, {\n    \"name\": \"Z\",\n    \"label\": \"Z\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Updatebtn\",\n      onClick: () => handleUpdate(data1, data2, setdata1, setdata2, setSlotsData),\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TimetableWindow\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"Timetab\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"TabHead\",\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 13\n            }, this), timeSlots.map(slot => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"TabHead\",\n              children: slot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 35\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(slotsData).map((_ref, id) => {\n            let [day, slots] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"TabDataDay\",\n                children: day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 15\n              }, this), Object.entries(slots).map((_ref2, index) => {\n                let [time, name] = _ref2;\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: `TabData ${name === \"Lunch\" || name === \"Snacks\" ? \"Break\" : index % 2 !== 0 ? \"active\" : null}`,\n                  children: name\n                }, `${day}-${time}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 17\n                }, this);\n              })]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TimetableOptsContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TimetableOptsTitleContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AddSlotItems\",\n            children: \"Add Slots\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Enter Slotname\",\n            className: \"AddSlotItems\",\n            value: slotname,\n            onChange: e => setslotname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            className: \"AddSlotItems\",\n            options: slotOptions,\n            onChange: e => setslottime(e[\"name\"])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"AddSlotOkbtn\",\n            onClick: () => handleClick(slotname, slottime, data1, data2),\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n}\n_s(Timetable, \"XmlpRY0k0OpQKhcMwk6brnJm89M=\");\n_c = Timetable;\nvar _c;\n$RefreshReg$(_c, \"Timetable\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Header","Select","axios","jsxDEV","_jsxDEV","handleClick","slotname","slottime","data1","data2","alert","handleSlotAdd","headers","sessionStorage","getItem","res","post","console","log","error","handleUpdate","setdata1","setdata2","setSlotsData","handlegetAllSlots","get","data","slot","subject","Tslot","SlotsTime","i","length","day","time","prevSlotsData","handlegetAllCourseSlots","Timetable","_s","setslotname","setslottime","timeSlots","slotsData","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","slotOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","Object","entries","_ref","id","slots","_ref2","index","name","placeholder","value","onChange","e","target","options","_c","$RefreshReg$"],"sources":["D:/REACT/React_Project/client/src/pages/Timetable/Timetable.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Navbar from '../../components/Navbar/Navbar'\r\nimport Header from '../../components/Header/Header'\r\n//import data from \"./newdata.json\"; // assuming data is in the same directory as this file\r\nimport './Timetable.css'\r\n//import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n//import { faCirclePlus} from \"@fortawesome/free-solid-svg-icons\"\r\n//import TimetableOpts from '../../components/Timetable/TimetableOpts';\r\nimport Select from 'react-select';\r\nimport axios from 'axios'\r\n\r\nfunction handleClick(slotname, slottime, data1, data2)\r\n{\r\n  if(data1[slottime] || data2[slottime])\r\n  {\r\n    alert(\"There is already a course/activity present at that slot\")\r\n    return\r\n  }\r\n\r\n  const handleSlotAdd = async () => {\r\n    try {\r\n      const headers = {\r\n        'Authorization': `${sessionStorage.getItem('token')}`\r\n      };\r\n      const res = await axios.post(`http://localhost:5000/api/user/addSlot`,{\"slotname\": slotname, \"slot\":slottime},{headers});\r\n      console.log(res)\r\n      alert(\"Added successfully\")\r\n    } catch (error) {\r\n      console.log(error)\r\n      }\r\n    }\r\n    handleSlotAdd()\r\n}\r\n\r\nfunction handleUpdate(data1, data2, setdata1, setdata2, setSlotsData)\r\n{\r\n  const handlegetAllSlots = async () => {\r\n    try {\r\n      const headers = {\r\n        'Authorization': `${sessionStorage.getItem('token')}`\r\n      };\r\n      const res = await axios.get(`http://localhost:5000/api/user/getAllSlots`,{headers});\r\n      setdata1(res.data)\r\n      var data = data1\r\n      if (data) {\r\n        for (const slot in data) {\r\n          const subject = data[slot];\r\n          const Tslot = SlotsTime[slot];\r\n          for (let i = 0; i < Tslot.length; i++) {\r\n            const day = Tslot[i].day;\r\n            const time = Tslot[i].time;\r\n\r\n            setSlotsData(prevSlotsData => ({\r\n              ...prevSlotsData,\r\n              [day]: {\r\n                ...prevSlotsData[day],\r\n                [time]: subject\r\n              }\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error)\r\n      }\r\n    }\r\n    handlegetAllSlots()\r\n    const SlotsTime= {\r\n      \"A\": [\r\n        { day: \"Monday\", time: \"9.00-9.55\" },\r\n        { day: \"Wednesday\", time: \"11.00-11.55\" },\r\n        { day: \"Thursday\", time: \"10.00-10.55\" }\r\n      ],\r\n      \"B\": [\r\n        { day: \"Monday\", time: \"10.00-10.55\" },\r\n        { day: \"Wednesday\", time: \"9.00-9.55\" },\r\n        { day: \"Thursday\", time: \"11.00-11.55\" }\r\n      ],\r\n      \"C\": [\r\n        { day: \"Monday\", time: \"11.00-11.55\" },\r\n        { day: \"Wednesday\", time: \"10.00-10.55\" },\r\n        { day: \"Thursday\", time: \"9.00-9.55\" }\r\n      ],\r\n      \"D\": [\r\n        { day: \"Monday\", time: \"12.00-12.55\" },\r\n        { day: \"Tuesday\", time: \"9.00-9.55\" },\r\n        { day: \"Friday\", time: \"11.00-11.55\" }\r\n      ],\r\n      \"E\": [\r\n        { day: \"Tuesday\", time: \"10.00-10.55\" },\r\n        { day: \"Friday\", time: \"9.00-9.55\" },\r\n        { day: \"Thursday\", time: \"12.00-12.55\" }\r\n      ],\r\n      \"F\": [\r\n        { day: \"Tuesday\", time: \"11.00-11.55\" },\r\n        { day: \"Friday\", time: \"10.00-10.55\" }\r\n      ],\r\n      \"G\": [\r\n        { day: \"Tuesday\", time: \"12.00-12.55\" },\r\n        { day: \"Wednesday\", time: \"12.00-12.55\" },\r\n        { day: \"Friday\", time: \"12.00-12.55\" }\r\n      ],\r\n      \"P\": [\r\n        { day: \"Monday\", time: \"14.30-15.55\" },\r\n        { day: \"Thursday\", time: \"16.00-17.25\"}\r\n      ],\r\n      \"Q\": [\r\n        { day: \"Monday\", time: \"16.00-17.25\"},\r\n        { day: \"Thursday\", time: \"14.30-15.55\"}\r\n      ],\r\n      \"R\": [\r\n        { day: \"Tuesday\", time: \"14.30-15.55\" },\r\n        { day: \"Friday\", time: \"16.00-17.25\"}\r\n      ],\r\n      \"S\": [\r\n        { day: \"Tuesday\", time: \"16.00-17.25\"},\r\n        { day: \"Friday\", time: \"14.30-15.55\"}\r\n      ],\r\n      \"W\": [\r\n        { day: \"Monday\", time: \"18.00-19.25\" },\r\n        { day: \"Thursday\", time: \"18.00-19.25\"}\r\n      ],\r\n      \"X\": [\r\n        { day: \"Monday\", time: \"19.30-21.00\" },\r\n        { day: \"Thursday\", time: \"19.30-21.00\"}\r\n      ],\r\n      \"Y\": [\r\n        { day: \"Tuesday\", time: \"18.00-19.25\"},\r\n        { day: \"Friday\", time: \"18.00-19.25\"}\r\n      ],\r\n      \"Z\": [\r\n        { day: \"Tuesday\", time:\"19.30-21.00\"},\r\n        { day: \"Friday\", time:\"19.30-21.00\"}\r\n      ],\r\n    };\r\n\r\n    const handlegetAllCourseSlots = async() =>{\r\n      try {\r\n        const headers = {\r\n          'Authorization': `${sessionStorage.getItem('token')}`\r\n        };\r\n        const res = await axios.get(`http://localhost:5000/api/user/getAllCourses`,{headers});\r\n        setdata2(res.data)\r\n        var data = data2\r\n        if (data) {\r\n          for (const slot in data) {\r\n            const subject = data[slot];\r\n            const Tslot = SlotsTime[slot];\r\n            for (let i = 0; i < Tslot.length; i++) {\r\n              const day = Tslot[i].day;\r\n              const time = Tslot[i].time;\r\n  \r\n              setSlotsData(prevSlotsData => ({\r\n                ...prevSlotsData,\r\n                [day]: {\r\n                  ...prevSlotsData[day],\r\n                  [time]: subject\r\n                }\r\n              }));\r\n            }\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log(error)\r\n        }\r\n    }\r\n    handlegetAllCourseSlots()\r\n}\r\n\r\nexport default function Timetable() {\r\n\r\n    const [slotname,setslotname] = useState(\"\")\r\n    const [slottime,setslottime] = useState(\"\")\r\n    const [data1, setdata1] = useState(null)\r\n    const [data2, setdata2] = useState(null)\r\n\r\n    const timeSlots = [\r\n        \"00.00-8.55\",\r\n        \"9.00-9.55\",\r\n        \"10.00-10.55\",\r\n        \"11.00-11.55\",\r\n        \"12.00-12.55\",\r\n        \"12.55-14.30\",\r\n        \"14.30-15.55\",\r\n        \"16.00-17.25\",\r\n        \"17.30-17.55\",\r\n        \"18.00-19.25\",\r\n        \"19.30-21.00\",\r\n        \"21.05-23.59\"\r\n      ];\r\n    \r\n      const [slotsData, setSlotsData] = useState({\r\n          Monday: {\r\n            \"00.00-8.55\":\"Asish\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n          Tuesday: {\r\n            \"00.00-8.55\":\"\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n          Wednesday: {\r\n            \"00.00-8.55\":\"\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n          Thursday: {\r\n            \"00.00-8.55\":\"\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n          Friday: {\r\n            \"00.00-8.55\":\"\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n          Saturday: {\r\n            \"00.00-8.55\":\"\",\r\n            \"9.00-9.55\":\"\",\r\n            \"10.00-10.55\":\"\",\r\n            \"11.00-11.55\":\"\",\r\n            \"12.00-12.55\":\"\",\r\n            \"12.55-14.30\":\"Lunch\",\r\n            \"14.30-15.55\":\"\",\r\n            \"16.00-17.25\":\"\",\r\n            \"17.30-17.55\":\"Snacks\",\r\n            \"18.00-19.25\":\"\",\r\n            \"19.30-21.00\":\"\",\r\n            \"21.05-23.59\":\"\"\r\n          },\r\n        });\r\n      \r\n    const slotOptions = [\r\n        { \"name\" : \"A\", \"label\": \"A\"},\r\n        { \"name\" : \"B\", \"label\": \"B\"},\r\n        { \"name\" : \"C\", \"label\": \"C\"},\r\n        { \"name\" : \"D\", \"label\": \"D\"},\r\n        { \"name\" : \"E\", \"label\": \"E\"},\r\n        { \"name\" : \"F\", \"label\": \"F\"},\r\n        { \"name\" : \"G\", \"label\": \"G\"},\r\n        { \"name\" : \"P\", \"label\": \"P\"},\r\n        { \"name\" : \"Q\", \"label\": \"Q\"},\r\n        { \"name\" : \"R\", \"label\": \"R\"},\r\n        { \"name\" : \"S\", \"label\": \"S\"},\r\n        { \"name\" : \"W\", \"label\": \"W\"},\r\n        { \"name\" : \"X\", \"label\": \"X\"},\r\n        { \"name\" : \"Y\", \"label\": \"Y\"},\r\n        { \"name\" : \"Z\", \"label\": \"Z\"},\r\n    ]\r\n    \r\n  return (\r\n    <div>\r\n        <Navbar/>\r\n        <Header/>\r\n        <div className='Updatebtn' onClick={()=>handleUpdate(data1, data2, setdata1, setdata2, setSlotsData)}>Update</div>\r\n        <div className='TimetableWindow'>\r\n        <table className='Timetab'>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"TabHead\">Day</th>\r\n            {timeSlots.map(slot=> <th className=\"TabHead\">{slot}</th>)}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.entries(slotsData).map(([day, slots], id) => (\r\n            <tr key={day}>\r\n              <td className=\"TabDataDay\">{day}</td>\r\n              {Object.entries(slots).map(([time, name], index) => (\r\n                <td className={`TabData ${(name === \"Lunch\" || name === \"Snacks\")?\"Break\":((index %2 !== 0) ? \"active\" : null)}`} key={`${day}-${time}`}>{name}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className='TimetableOptsContainer'>\r\n        <div className='TimetableOptsTitleContainer'>\r\n            <div className='AddSlotItems'>Add Slots</div>\r\n        </div>\r\n        <div>\r\n            <input placeholder='Enter Slotname' className='AddSlotItems' value={slotname} onChange={(e)=>setslotname(e.target.value)} />\r\n            <Select className='AddSlotItems' options={slotOptions} onChange={(e)=>setslottime(e[\"name\"])}/>\r\n            <div className='AddSlotOkbtn' onClick={()=>handleClick(slotname, slottime, data1, data2)}>Ok</div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD;AACA,OAAO,iBAAiB;AACxB;AACA;AACA;AACA,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,WAAWA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EACrD;EACE,IAAGD,KAAK,CAACD,QAAQ,CAAC,IAAIE,KAAK,CAACF,QAAQ,CAAC,EACrC;IACEG,KAAK,CAAC,yDAAyD,CAAC;IAChE;EACF;EAEA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,OAAO,GAAG;QACd,eAAe,EAAG,GAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE;MACtD,CAAC;MACD,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAE,wCAAuC,EAAC;QAAC,UAAU,EAAEV,QAAQ;QAAE,MAAM,EAACC;MAAQ,CAAC,EAAC;QAACK;MAAO,CAAC,CAAC;MACxHK,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBL,KAAK,CAAC,oBAAoB,CAAC;IAC7B,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACF,CAAC;EACDR,aAAa,EAAE;AACnB;AAEA,SAASS,YAAYA,CAACZ,KAAK,EAAEC,KAAK,EAAEY,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,EACpE;EACE,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMZ,OAAO,GAAG;QACd,eAAe,EAAG,GAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE;MACtD,CAAC;MACD,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACuB,GAAG,CAAE,4CAA2C,EAAC;QAACb;MAAO,CAAC,CAAC;MACnFS,QAAQ,CAACN,GAAG,CAACW,IAAI,CAAC;MAClB,IAAIA,IAAI,GAAGlB,KAAK;MAChB,IAAIkB,IAAI,EAAE;QACR,KAAK,MAAMC,IAAI,IAAID,IAAI,EAAE;UACvB,MAAME,OAAO,GAAGF,IAAI,CAACC,IAAI,CAAC;UAC1B,MAAME,KAAK,GAAGC,SAAS,CAACH,IAAI,CAAC;UAC7B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;YACrC,MAAME,GAAG,GAAGJ,KAAK,CAACE,CAAC,CAAC,CAACE,GAAG;YACxB,MAAMC,IAAI,GAAGL,KAAK,CAACE,CAAC,CAAC,CAACG,IAAI;YAE1BX,YAAY,CAACY,aAAa,KAAK;cAC7B,GAAGA,aAAa;cAChB,CAACF,GAAG,GAAG;gBACL,GAAGE,aAAa,CAACF,GAAG,CAAC;gBACrB,CAACC,IAAI,GAAGN;cACV;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACF,CAAC;EACDK,iBAAiB,EAAE;EACnB,MAAMM,SAAS,GAAE;IACf,GAAG,EAAE,CACH;MAAEG,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAY,CAAC,EACpC;MAAED,GAAG,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAc,CAAC,EACzC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAc,CAAC,CACzC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAY,CAAC,EACvC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAc,CAAC,CACzC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAc,CAAC,EACzC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAY,CAAC,CACvC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAY,CAAC,EACrC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,CACvC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAc,CAAC,EACvC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAY,CAAC,EACpC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAc,CAAC,CACzC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAc,CAAC,EACvC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,CACvC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAc,CAAC,EACvC;MAAED,GAAG,EAAE,WAAW;MAAEC,IAAI,EAAE;IAAc,CAAC,EACzC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,CACvC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAa,CAAC,CACxC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAa,CAAC,EACrC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAa,CAAC,CACxC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAc,CAAC,EACvC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAa,CAAC,CACtC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAa,CAAC,EACtC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAa,CAAC,CACtC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAa,CAAC,CACxC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAc,CAAC,EACtC;MAAED,GAAG,EAAE,UAAU;MAAEC,IAAI,EAAE;IAAa,CAAC,CACxC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAE;IAAa,CAAC,EACtC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAE;IAAa,CAAC,CACtC;IACD,GAAG,EAAE,CACH;MAAED,GAAG,EAAE,SAAS;MAAEC,IAAI,EAAC;IAAa,CAAC,EACrC;MAAED,GAAG,EAAE,QAAQ;MAAEC,IAAI,EAAC;IAAa,CAAC;EAExC,CAAC;EAED,MAAME,uBAAuB,GAAG,MAAAA,CAAA,KAAU;IACxC,IAAI;MACF,MAAMxB,OAAO,GAAG;QACd,eAAe,EAAG,GAAEC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAE;MACtD,CAAC;MACD,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACuB,GAAG,CAAE,8CAA6C,EAAC;QAACb;MAAO,CAAC,CAAC;MACrFU,QAAQ,CAACP,GAAG,CAACW,IAAI,CAAC;MAClB,IAAIA,IAAI,GAAGjB,KAAK;MAChB,IAAIiB,IAAI,EAAE;QACR,KAAK,MAAMC,IAAI,IAAID,IAAI,EAAE;UACvB,MAAME,OAAO,GAAGF,IAAI,CAACC,IAAI,CAAC;UAC1B,MAAME,KAAK,GAAGC,SAAS,CAACH,IAAI,CAAC;UAC7B,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;YACrC,MAAME,GAAG,GAAGJ,KAAK,CAACE,CAAC,CAAC,CAACE,GAAG;YACxB,MAAMC,IAAI,GAAGL,KAAK,CAACE,CAAC,CAAC,CAACG,IAAI;YAE1BX,YAAY,CAACY,aAAa,KAAK;cAC7B,GAAGA,aAAa;cAChB,CAACF,GAAG,GAAG;gBACL,GAAGE,aAAa,CAACF,GAAG,CAAC;gBACrB,CAACC,IAAI,GAAGN;cACV;YACF,CAAC,CAAC,CAAC;UACL;QACF;MACF;IACF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;IAClB;EACJ,CAAC;EACDiB,uBAAuB,EAAE;AAC7B;AAEA,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAEhC,MAAM,CAAChC,QAAQ,EAACiC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACU,QAAQ,EAACiC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACW,KAAK,EAAEa,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,KAAK,EAAEa,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAM4C,SAAS,GAAG,CACd,YAAY,EACZ,WAAW,EACX,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,EACb,aAAa,CACd;EAED,MAAM,CAACC,SAAS,EAAEnB,YAAY,CAAC,GAAG1B,QAAQ,CAAC;IACvC8C,MAAM,EAAE;MACN,YAAY,EAAC,OAAO;MACpB,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB,CAAC;IACDC,OAAO,EAAE;MACP,YAAY,EAAC,EAAE;MACf,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB,CAAC;IACDC,SAAS,EAAE;MACT,YAAY,EAAC,EAAE;MACf,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB,CAAC;IACDC,QAAQ,EAAE;MACR,YAAY,EAAC,EAAE;MACf,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB,CAAC;IACDC,MAAM,EAAE;MACN,YAAY,EAAC,EAAE;MACf,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB,CAAC;IACDC,QAAQ,EAAE;MACR,YAAY,EAAC,EAAE;MACf,WAAW,EAAC,EAAE;MACd,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,OAAO;MACrB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,QAAQ;MACtB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC,EAAE;MAChB,aAAa,EAAC;IAChB;EACF,CAAC,CAAC;EAEN,MAAMC,WAAW,GAAG,CAChB;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,EAC7B;IAAE,MAAM,EAAG,GAAG;IAAE,OAAO,EAAE;EAAG,CAAC,CAChC;EAEH,oBACE7C,OAAA;IAAA8C,QAAA,gBACI9C,OAAA,CAACL,MAAM;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTlD,OAAA,CAACJ,MAAM;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACTlD,OAAA;MAAKmD,SAAS,EAAC,WAAW;MAACC,OAAO,EAAEA,CAAA,KAAIpC,YAAY,CAACZ,KAAK,EAAEC,KAAK,EAAEY,QAAQ,EAAEC,QAAQ,EAAEC,YAAY,CAAE;MAAA2B,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAClHlD,OAAA;MAAKmD,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAChC9C,OAAA;QAAOmD,SAAS,EAAC,SAAS;QAAAL,QAAA,gBAC1B9C,OAAA;UAAA8C,QAAA,eACE9C,OAAA;YAAA8C,QAAA,gBACE9C,OAAA;cAAImD,SAAS,EAAC,SAAS;cAAAL,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAK,EAC/Bb,SAAS,CAACgB,GAAG,CAAC9B,IAAI,iBAAGvB,OAAA;cAAImD,SAAS,EAAC,SAAS;cAAAL,QAAA,EAAEvB;YAAI;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACvD;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACC,eACRlD,OAAA;UAAA8C,QAAA,EACGQ,MAAM,CAACC,OAAO,CAACjB,SAAS,CAAC,CAACe,GAAG,CAAC,CAAAG,IAAA,EAAeC,EAAE;YAAA,IAAhB,CAAC5B,GAAG,EAAE6B,KAAK,CAAC,GAAAF,IAAA;YAAA,oBAC1CxD,OAAA;cAAA8C,QAAA,gBACE9C,OAAA;gBAAImD,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAEjB;cAAG;gBAAAkB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,EACpCI,MAAM,CAACC,OAAO,CAACG,KAAK,CAAC,CAACL,GAAG,CAAC,CAAAM,KAAA,EAAeC,KAAK;gBAAA,IAAnB,CAAC9B,IAAI,EAAE+B,IAAI,CAAC,GAAAF,KAAA;gBAAA,oBACtC3D,OAAA;kBAAImD,SAAS,EAAG,WAAWU,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,GAAE,OAAO,GAAGD,KAAK,GAAE,CAAC,KAAK,CAAC,GAAI,QAAQ,GAAG,IAAM,EAAE;kBAAAd,QAAA,EAAyBe;gBAAI,GAAtB,GAAEhC,GAAI,IAAGC,IAAK,EAAC;kBAAAiB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QAAa;cAAA,CACrJ,CAAC;YAAA,GAJKrB,GAAG;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAKP;UAAA,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eACRlD,OAAA;QAAKmD,SAAS,EAAC,wBAAwB;QAAAL,QAAA,gBACrC9C,OAAA;UAAKmD,SAAS,EAAC,6BAA6B;UAAAL,QAAA,eACxC9C,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAL,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAM;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3C,eACNlD,OAAA;UAAA8C,QAAA,gBACI9C,OAAA;YAAO8D,WAAW,EAAC,gBAAgB;YAACX,SAAS,EAAC,cAAc;YAACY,KAAK,EAAE7D,QAAS;YAAC8D,QAAQ,EAAGC,CAAC,IAAG9B,WAAW,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;UAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,eAC5HlD,OAAA,CAACH,MAAM;YAACsD,SAAS,EAAC,cAAc;YAACgB,OAAO,EAAEtB,WAAY;YAACmB,QAAQ,EAAGC,CAAC,IAAG7B,WAAW,CAAC6B,CAAC,CAAC,MAAM,CAAC;UAAE;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAE,eAC/FlD,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAACC,OAAO,EAAEA,CAAA,KAAInD,WAAW,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,CAAE;YAAAyC,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAChG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAChB,EAAA,CApKuBD,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}